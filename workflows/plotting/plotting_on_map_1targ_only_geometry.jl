
#Plotting op file
using GeoDatasets
using JLD2
using PyPlot

@load "../Outputs/outputs_geometry_single_target_configuration_4.jld"


img_path = "/Users/joshil/Documents/Code/Plots_4p/outputs_geometry_profiles_configuration_4/"

#xlim_plot = (-125,-75)
#ylim_plot = (15,50)

xlim_plot = (-180,180)
#ylim_plot = (-75,75)
ylim_plot = (-51.6,51.6)

#xlim_plot = (95,140)
#ylim_plot = (-10,15)

Lats_p                  = Geo_location.A[1,:,1]
Lons_p                  = Geo_location.A[:,1,2]

plot_v_la               =  lookang_all[:,:,1]
plot_v_bprpmax          =  Perp_baseline_max[:,:,1]
plot_v_bprpmin          =  Perp_baseline_min[:,:,1]
plot_v_bparmax          =  Par_baseline_max[:,:,1]
plot_v_bparmin          =  Par_baseline_min[:,:,1]
plot_v_bnrmmax          =  Norm_baseline_max[:,:,1]
plot_v_bnrmmin          =  Norm_baseline_min[:,:,1]

theo_res_N_1              =  res_theory_n[:,:,1]
theo_res_S_1              =  res_theory_s[:,:,1]
amb_Ht_1                  =  amb_H[:,:,1]
amb_Nt_1                  =  amb_N[:,:,1]
Slnt_range_1              = slnt_range[:,:,1]./1000

theo_res_N_2              =  res_theory_n[:,:,2]
theo_res_S_2              =  res_theory_s[:,:,2]
amb_Ht_2                  =  amb_H[:,:,2]
amb_Nt_2                  =  amb_N[:,:,2]
Slnt_range_2              = slnt_range[:,:,2]./1000

theo_res_N_3              =  res_theory_n[:,:,3]
theo_res_S_3              =  res_theory_s[:,:,3]
amb_Ht_3                  =  amb_H[:,:,3]
amb_Nt_3                  =  amb_N[:,:,3]
Slnt_range_3              = slnt_range[:,:,3]./1000

theo_res_N_4              =  res_theory_n[:,:,4]
theo_res_S_4              =  res_theory_s[:,:,4]
amb_Ht_4                  =  amb_H[:,:,4]
amb_Nt_4                  =  amb_N[:,:,4]
Slnt_range_4              = slnt_range[:,:,4]./1000



#Look angles
pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],plot_v_la'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[deg]]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("cividis")
plt.clim(30,42)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Look angle", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"LookAng.png")


#PerpBaselineMax
pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],plot_v_bprpmax'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[km]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
plt.clim(4,13)
#plt.clim(9,19)
#plt.clim(15,35) #4
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Max Perp Baseline", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"PerpBaselineMax.png")

#PerpBaselineMin
pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],plot_v_bprpmin'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[km]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
plt.clim(3,6.5)
#plt.clim(0,10)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Min Perp Baseline", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"PerpBaselineMin.png")

#ParBaselineMax
pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],plot_v_bparmax'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[km]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
plt.clim(0.6,1.6)
#plt.clim(238.5,240.5) #4
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Max AT Baseline", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"ATBaselineMax.png")

#ParBaselineMin
pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],plot_v_bparmin'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[km]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
#plt.clim(0.0,0.4) 
plt.clim(0.0,0.8)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Min AT Baseline", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"ATBaselineMin.png")


#NormBaselineMax
pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],plot_v_bnrmmax'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[km]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
plt.clim(6,15)
#plt.clim(10, 22)
#plt.clim(239,241)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Max Baseline", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"NormBaselineMax.png")

#NormBaselineMin
pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],plot_v_bnrmmin'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[km]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
plt.clim(3.5,7.5)
#plt.clim(0,10)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Min Baseline", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"NormBaselineMin.png")





pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],theo_res_N_1'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[m]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
#plt.clim(10,30)
plt.clim(8,22)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Theoretical resolution n - method 1", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"Theo_res_n_1.png")


pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],theo_res_N_2'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[m]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
#plt.clim(10,30)
plt.clim(8,22)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Theoretical resolution n - method 2", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"Theo_res_n_2.png")

pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],theo_res_N_3'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[m]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
#plt.clim(10,30)
plt.clim(8,22)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Theoretical resolution n - method 3", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"Theo_res_n_3.png")

pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],theo_res_N_4'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[m]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
#plt.clim(10,30)
plt.clim(8,22)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Theoretical resolution n - method 4", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"Theo_res_n_4.png")


pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],theo_res_S_1'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[m]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
plt.clim(2.5, 3.5)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Theoretical resolution along-track", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"Theo_res_s_1.png")



pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],amb_Ht_1'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[m]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
plt.clim(15,45)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Ambiguity along Height - method 1", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"Amb_H_1.png")

pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],amb_Ht_2'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[m]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
plt.clim(15,45)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Ambiguity along Height - method 2", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"Amb_H_2.png")

pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],amb_Ht_3'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[m]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
plt.clim(15,45)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Ambiguity along Height - method 3", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"Amb_H_3.png")

pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],amb_Ht_4'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[m]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
plt.clim(15,45)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Ambiguity along Height - method 4", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"Amb_H_4.png")




pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],amb_Nt_1'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[m]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
plt.clim(30,60)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Ambiguity along n - method 1", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"Amb_N_1.png")



pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],Slnt_range_1'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[km]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
plt.clim(850,1050)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Range to target - method 1", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"Slnt_Range_1.png")

pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],Slnt_range_2'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[km]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
plt.clim(850,1050)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Range to target - method 2", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"Slnt_Range_2.png")

pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],Slnt_range_3'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[km]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
plt.clim(850,1050)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Range to target - method 3", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"Slnt_Range_3.png")

pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],Slnt_range_4'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[km]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
plt.clim(850,1050)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Range to target - method 4", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"Slnt_Range_4.png")














pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],theo_res_N_1'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[m]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
#plt.clim(10,30-5) #1,3
#plt.clim(8,22-4) #2
plt.clim(3,15-4) #4
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Theoretical resolution n", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"Theo_res_n.png")

pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],amb_Ht_1'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[m]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
plt.clim(15,45)
#plt.clim(10,25) #4
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Ambiguity along Height", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"Amb_H.png")

pygui(true)
fig = plt.figure(figsize=(11, 6))
rr=(pcolormesh(Lons_p[:],Lats_p[:],Slnt_range_1'))
cbar = colorbar(orientation="vertical", shrink=0.70)
cbar.set_label("[km]", size=16)
cbar.ax.tick_params(labelsize=16) 
gca().set_aspect(1)
plt.set_cmap("jet")
plt.clim(850,1050)
lon,lat,data = GeoDatasets.landseamask(;resolution='c',grid=5)
pygui(true)
(PyPlot.contour(lon,lat,data',[0.5],colors=[[0.2,0.2,0.2]],linewidths=1.0))
gca().set_aspect(1)
plt.xlabel("Longitude", fontsize=18)
plt.ylabel("Latitude", fontsize=18)
plt.title("Range to target", fontsize=20)
plt.xlim(xlim_plot)
plt.ylim(ylim_plot)
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
gca().set_aspect(1.1)
plt.savefig(img_path*"Slnt_Range.png")
